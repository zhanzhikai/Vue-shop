{"remainingRequest":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/user/index.vue","mtime":1563892409005},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js","mtime":1564022599683},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js","mtime":1564022615698}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    // 验证邮箱的规则\n    var checkEmail = function checkEmail(rule, value, cb) {\n      // 验证邮箱的正则表达式\n      var regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\n\n      if (regEmail.test(value)) {\n        // 合法的邮箱\n        return cb();\n      }\n\n      cb(new Error('请输入合法的邮箱'));\n    }; // 验证手机号的规则\n\n\n    var checkMobile = function checkMobile(rule, value, cb) {\n      // 验证手机号的正则表达式\n      var regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/;\n\n      if (regMobile.test(value)) {\n        return cb();\n      }\n\n      cb(new Error('请输入合法的手机号'));\n    };\n\n    return {\n      // 获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        // 当前的页数\n        pagenum: 1,\n        // 当前每页显示多少条数据\n        pagesize: 2\n      },\n      userlist: [],\n      total: 0,\n      addDialogVisible: false,\n      // 添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        mobile: ''\n      },\n      // 添加表单的验证规则对象\n      addFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3~10个字符之间',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '用户名的长度在6~15个字符之间',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      // 控制修改用户对话框的显示与隐藏\n      editDialogVisible: false,\n      // 查询到的用户信息对象\n      editForm: {},\n      // 修改表单的验证规则对象\n      editFormRules: {\n        email: [{\n          required: true,\n          message: '请输入用户邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入用户手机',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getUsers();\n  },\n  methods: {\n    getUsers: function () {\n      var _getUsers = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, _ref$data, data, meta;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('users', {\n                  params: this.queryInfo\n                });\n\n              case 2:\n                _ref = _context.sent;\n                _ref$data = _ref.data;\n                data = _ref$data.data;\n                meta = _ref$data.meta;\n\n                if (!(meta.status !== 200)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error(meta.msg));\n\n              case 8:\n                this.userlist = data.users;\n                this.total = data.total; // console.log(data);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getUsers() {\n        return _getUsers.apply(this, arguments);\n      }\n\n      return getUsers;\n    }(),\n    // 监听 pagesize 改变的事件\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getUsers();\n    },\n    // 监听 页码值 改变的事件\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getUsers();\n    },\n    userStateChanged: function () {\n      var _userStateChanged = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(userinfor) {\n        var _ref2, _ref2$data, data, meta;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.put(\"users/\".concat(userinfor.id, \"/state/\").concat(userinfor.mg_state));\n\n              case 2:\n                _ref2 = _context2.sent;\n                _ref2$data = _ref2.data;\n                data = _ref2$data.data;\n                meta = _ref2$data.meta;\n\n                if (!(meta.status !== 200)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                userinfor.mg_state = !userinfor.mg_state;\n                return _context2.abrupt(\"return\", this.$message.error(meta.msg));\n\n              case 9:\n                this.$message.success(meta.msg);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function userStateChanged(_x) {\n        return _userStateChanged.apply(this, arguments);\n      }\n\n      return userStateChanged;\n    }(),\n    // 监听添加用户对话框的关闭事件\n    clearDialogClosed: function clearDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    // 点击按钮，添加新用户\n    addUser: function addUser() {\n      var _this = this;\n\n      this.$refs.addFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee3(valid) {\n          var _ref4, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  _context3.next = 4;\n                  return _this.$http.post('users', _this.addForm);\n\n                case 4:\n                  _ref4 = _context3.sent;\n                  res = _ref4.data;\n\n                  if (res.meta.status !== 201) {\n                    _this.$message.error('添加用户失败！');\n                  }\n\n                  _this.$message.success('添加用户成功！'); // 隐藏添加用户的对话框\n\n\n                  _this.addDialogVisible = false; // 重新获取用户列表数据\n\n                  _this.getUsers();\n\n                case 10:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    },\n    // 展示编辑用户的对话框\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(id) {\n        var _ref5, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(id);\n                _context4.next = 3;\n                return this.$http.get('users/' + id);\n\n              case 3:\n                _ref5 = _context4.sent;\n                res = _ref5.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error('查询用户信息失败！'));\n\n              case 7:\n                this.editForm = res.data;\n                this.editDialogVisible = true;\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function showEditDialog(_x3) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    // 监听修改用户对话框的关闭事件\n    editDialogClosed: function editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n    editUserInfo: function editUserInfo() {\n      var _this2 = this;\n\n      this.$refs.editFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref6 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee5(valid) {\n          var _ref7, res;\n\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (valid) {\n                    _context5.next = 2;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\");\n\n                case 2:\n                  _context5.next = 4;\n                  return _this2.$http.put('users/' + _this2.editForm.id, {\n                    email: _this2.editForm.email,\n                    mobile: _this2.editForm.mobile\n                  });\n\n                case 4:\n                  _ref7 = _context5.sent;\n                  res = _ref7.data;\n\n                  if (!(res.meta.status !== 200)) {\n                    _context5.next = 8;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\", _this2.$message.error('更新用户信息失败！'));\n\n                case 8:\n                  // 关闭对话框\n                  _this2.editDialogVisible = false; // 刷新数据列表\n\n                  _this2.getUsers(); // 提示修改成功\n\n\n                  _this2.$message.success('更新用户信息成功！');\n\n                case 11:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x4) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    },\n    // 根据Id删除对应的用户信息\n    removeUserById: function () {\n      var _removeUserById = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(id) {\n        var _ref8, res;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                });\n\n              case 3:\n                _context6.next = 5;\n                return this.$http.delete('users/' + id);\n\n              case 5:\n                _ref8 = _context6.sent;\n                res = _ref8.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", this.$message.error('删除用户失败！'));\n\n              case 9:\n                // 刷新数据列表\n                this.getUsers();\n                this.$message.success('删除用户成功！');\n                _context6.next = 16;\n                break;\n\n              case 13:\n                _context6.prev = 13;\n                _context6.t0 = _context6[\"catch\"](0);\n                this.$message.info('已经撤销删除');\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 13]]);\n      }));\n\n      function removeUserById(_x5) {\n        return _removeUserById.apply(this, arguments);\n      }\n\n      return removeUserById;\n    }()\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"users\">\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域 -->\n\n    <el-card>\n      <!-- 搜索与添加区域 -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"10\">\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUsers\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUsers\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addDialogVisible=true\">添加用户</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- 用户列表区域 -->\n      <el-table :data=\"userlist\" border>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\n        <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\n        <el-table-column label=\"电话\" prop=\"mobile\"></el-table-column>\n        <el-table-column label=\"角色\" prop=\"role_name\"></el-table-column>\n        <el-table-column label=\"状态\">\n          <template slot-scope=\"scope\">\n            <el-switch v-model=\"scope.row.mg_state\" @change=\"userStateChanged(scope.row)\"></el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"180px\">\n          <template slot-scope=\"scope\">\n            <!-- 修改按钮 -->\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n              @click=\"showEditDialog(scope.row.id)\"\n            ></el-button>\n            <!-- 删除按钮 -->\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n              @click=\"removeUserById(scope.row.id)\"\n            ></el-button>\n            <!-- 分配角色按钮 -->\n            <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\n              <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 分页区域 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[1, 2, 5, 10]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n\n      <el-dialog\n        title=\"添加用户\"\n        :visible.sync=\"addDialogVisible\"\n        width=\"50%\"\n        @close=\"clearDialogClosed\"\n      >\n        <!-- 内容主体区域 -->\n        <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\n          <el-form-item label=\"用户名\" prop=\"username\">\n            <el-input v-model=\"addForm.username\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"密码\" prop=\"password\">\n            <el-input v-model=\"addForm.password\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"邮箱\" prop=\"email\">\n            <el-input v-model=\"addForm.email\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"手机\" prop=\"mobile\">\n            <el-input v-model=\"addForm.mobile\" maxlength=\"11\"></el-input>\n          </el-form-item>\n        </el-form>\n        <!-- 底部区域 -->\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n        </span>\n      </el-dialog>\n      <!-- 修改用户的对话框 -->\n      <el-dialog\n        title=\"修改用户\"\n        :visible.sync=\"editDialogVisible\"\n        width=\"50%\"\n        @close=\"editDialogClosed\"\n      >\n        <!-- 内容主体区域 -->\n        <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\n          <el-form-item label=\"用户名\" prop=\"username\">\n            <el-input v-model=\"editForm.username\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"邮箱\" prop=\"email\">\n            <el-input v-model=\"editForm.email\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"手机\" prop=\"mobile\">\n            <el-input v-model=\"editForm.mobile\" maxlength=\"11\"></el-input>\n          </el-form-item>\n        </el-form>\n        <!-- 底部区域 -->\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\n        </span>\n      </el-dialog>\n    </el-card>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    // 验证邮箱的规则\n    var checkEmail = (rule, value, cb) => {\n      // 验证邮箱的正则表达式\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\n\n      if (regEmail.test(value)) {\n        // 合法的邮箱\n        return cb()\n      }\n\n      cb(new Error('请输入合法的邮箱'))\n    }\n\n    // 验证手机号的规则\n    var checkMobile = (rule, value, cb) => {\n      // 验证手机号的正则表达式\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\n\n      if (regMobile.test(value)) {\n        return cb()\n      }\n\n      cb(new Error('请输入合法的手机号'))\n    }\n\n    return {\n      // 获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        // 当前的页数\n        pagenum: 1,\n        // 当前每页显示多少条数据\n        pagesize: 2\n      },\n      userlist: [],\n      total: 0,\n      addDialogVisible: false,\n      // 添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        mobile: ''\n      },\n      // 添加表单的验证规则对象\n      addFormRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          {\n            min: 3,\n            max: 10,\n            message: '用户名的长度在3~10个字符之间',\n            trigger: 'blur'\n          }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          {\n            min: 6,\n            max: 15,\n            message: '用户名的长度在6~15个字符之间',\n            trigger: 'blur'\n          }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { validator: checkEmail, trigger: 'blur' }\n        ],\n        mobile: [\n          { required: true, message: '请输入手机号', trigger: 'blur' },\n          { validator: checkMobile, trigger: 'blur' }\n        ]\n      },\n      // 控制修改用户对话框的显示与隐藏\n      editDialogVisible: false,\n      // 查询到的用户信息对象\n      editForm: {},\n      // 修改表单的验证规则对象\n      editFormRules: {\n        email: [\n          { required: true, message: '请输入用户邮箱', trigger: 'blur' },\n          { validator: checkEmail, trigger: 'blur' }\n        ],\n        mobile: [\n          { required: true, message: '请输入用户手机', trigger: 'blur' },\n          { validator: checkMobile, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getUsers()\n  },\n  methods: {\n    async getUsers() {\n      const {\n        data: { data, meta }\n      } = await this.$http.get('users', { params: this.queryInfo })\n      if (meta.status !== 200) return this.$message.error(meta.msg)\n      this.userlist = data.users\n      this.total = data.total\n      // console.log(data);\n    },\n    // 监听 pagesize 改变的事件\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getUsers()\n    },\n    // 监听 页码值 改变的事件\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getUsers()\n    },\n    async userStateChanged(userinfor) {\n      const {\n        data: { data, meta }\n      } = await this.$http.put(\n        `users/${userinfor.id}/state/${userinfor.mg_state}`\n      )\n      if (meta.status !== 200) {\n        userinfor.mg_state = !userinfor.mg_state\n        return this.$message.error(meta.msg)\n      }\n      this.$message.success(meta.msg)\n    },\n    // 监听添加用户对话框的关闭事件\n    clearDialogClosed() {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 点击按钮，添加新用户\n    addUser() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        // 可以发起添加用户的网络请求\n        const { data: res } = await this.$http.post('users', this.addForm)\n\n        if (res.meta.status !== 201) {\n          this.$message.error('添加用户失败！')\n        }\n\n        this.$message.success('添加用户成功！')\n        // 隐藏添加用户的对话框\n        this.addDialogVisible = false\n        // 重新获取用户列表数据\n        this.getUsers()\n      })\n    },\n    // 展示编辑用户的对话框\n    async showEditDialog(id) {\n      console.log(id)\n      const { data: res } = await this.$http.get('users/' + id)\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('查询用户信息失败！')\n      }\n\n      this.editForm = res.data\n      this.editDialogVisible = true\n    },\n    // 监听修改用户对话框的关闭事件\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields()\n    },\n\n    editUserInfo() {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) return\n        // 发起修改用户信息的数据请求\n        const { data: res } = await this.$http.put(\n          'users/' + this.editForm.id,\n          {\n            email: this.editForm.email,\n            mobile: this.editForm.mobile\n          }\n        )\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('更新用户信息失败！')\n        }\n\n        // 关闭对话框\n        this.editDialogVisible = false\n        // 刷新数据列表\n        this.getUsers()\n        // 提示修改成功\n        this.$message.success('更新用户信息成功！')\n      })\n    },\n    // 根据Id删除对应的用户信息\n    async removeUserById(id) {\n      try {\n        // 如果用户确认删除，则返回值为字符串 confirm\n        // 如果用户取消了删除，则返回值为字符串 cancel\n        // console.log(confirmResult)\n        await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        const { data: res } = await this.$http.delete('users/' + id)\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除用户失败！')\n        }\n         // 刷新数据列表\n        this.getUsers()\n        \n        this.$message.success('删除用户成功！')\n       \n      } catch (err) {\n        this.$message.info('已经撤销删除')\n      }\n    }\n  }\n}\n</script lang=\"less\"scoped>\n<style >\n</style>"],"sourceRoot":"src/components/user"}]}