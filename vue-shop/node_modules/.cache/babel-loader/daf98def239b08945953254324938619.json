{"remainingRequest":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/views/login/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/views/login/login.vue","mtime":1563501614468},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js","mtime":1564022599683},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js","mtime":1564022615698}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 这是登录表单的数据绑定对象\n      loginForm: {\n        username: 'admin',\n        password: '123456'\n      },\n      // 这是表单的验证规则对象\n      loginFormRules: {\n        // 验证用户名是否合法\n        username: [{\n          required: true,\n          message: '请输入登录名称',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        // 验证密码是否合法\n        password: [{\n          required: true,\n          message: '请输入登录密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '长度在 6 到 15 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 点击重置按钮，重置登录表单\n    resetLoginForm: function resetLoginForm() {\n      // console.log(this);\n      this.$refs.loginFormRef.resetFields();\n    },\n    login: function login() {\n      var _this = this;\n\n      this.$refs.loginFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(valid) {\n          var _ref2, res;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (valid) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 2:\n                  _context.next = 4;\n                  return _this.$http.post('login', _this.loginForm);\n\n                case 4:\n                  _ref2 = _context.sent;\n                  res = _ref2.data;\n\n                  if (!(res.meta.status !== 200)) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$message.error('登录失败！'));\n\n                case 8:\n                  _this.$message.success('登录成功'); // 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\n                  //   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\n                  //   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\n\n\n                  window.sessionStorage.setItem('token', res.data.token); // 2. 通过编程式导航跳转到后台主页，路由地址是 /home\n\n                  _this.$router.push('/home');\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAFA;AAMA;AACA,MAAA,cAAA,EAAA;AACA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CAFA;AAMA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA;AAPA;AAPA,KAAA;AAoBA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,cAFA,4BAEA;AACA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,WAAA;AACA,KALA;AAMA,IAAA,KANA,mBAMA;AAAA;;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAA,iBAAA,KAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,KADA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,yBAEA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,CAFA;;AAAA;AAAA;AAEA,kBAAA,GAFA,SAEA,IAFA;;AAAA,wBAGA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAHA;AAAA;AAAA;AAAA;;AAAA,mDAGA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAHA;;AAAA;AAIA,kBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,EAJA,CAKA;AACA;AACA;;;AACA,kBAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,OAAA,EAAA,GAAA,CAAA,IAAA,CAAA,KAAA,EARA,CASA;;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AAYA;AAnBA;AAvBA,CAAA","sourcesContent":["<template>\n  <div class=\"login_container\">\n    <div class=\"login_box\">\n      <!-- 头像区域 -->\n      <div class=\"avatar_box\">\n        <img src=\"./logo.png\" alt=\"\">\n      </div>\n      <!-- 登录表单区域 -->\n      <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginFormRules\" label-width=\"0px\" class=\"login_form\">\n        <!-- 用户名 -->\n        <el-form-item prop=\"username\">\n          <el-input v-model=\"loginForm.username\" prefix-icon=\"iconfont icon-user\"></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input v-model=\"loginForm.password\" prefix-icon=\"iconfont icon-3702mima\" type=\"password\"></el-input>\n        </el-form-item>\n        <!-- 按钮区域 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\n          <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // 这是登录表单的数据绑定对象\n      loginForm: {\n        username: 'admin',\n        password: '123456'\n      },\n      // 这是表单的验证规则对象\n      loginFormRules: {\n        // 验证用户名是否合法\n        username: [\n          { required: true, message: '请输入登录名称', trigger: 'blur' },\n          { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\n        ],\n        // 验证密码是否合法\n        password: [\n          { required: true, message: '请输入登录密码', trigger: 'blur' },\n          { min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    // 点击重置按钮，重置登录表单\n    resetLoginForm() {\n      // console.log(this);\n      this.$refs.loginFormRef.resetFields()\n    },\n    login() {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.post('login', this.loginForm)\n        if (res.meta.status !== 200) return this.$message.error('登录失败！')\n        this.$message.success('登录成功')\n        // 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\n        //   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\n        //   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\n        window.sessionStorage.setItem('token', res.data.token)\n        // 2. 通过编程式导航跳转到后台主页，路由地址是 /home\n        this.$router.push('/home')\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.login_container {\n  background-color: #2b4b6b;\n  height: 100%;\n}\n\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  .avatar_box {\n    height: 130px;\n    width: 130px;\n    border: 1px solid #eee;\n    border-radius: 50%;\n    padding: 10px;\n    box-shadow: 0 0 10px #ddd;\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #fff;\n    img {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: #eee;\n    }\n  }\n}\n\n.login_form {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 0 20px;\n  box-sizing: border-box;\n}\n\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n</style>\n"],"sourceRoot":"src/views/login"}]}