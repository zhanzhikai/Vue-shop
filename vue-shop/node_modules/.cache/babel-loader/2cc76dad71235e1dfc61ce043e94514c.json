{"remainingRequest":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/goods/Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/goods/Add.vue","mtime":1564037051993},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js","mtime":1564022599683},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js","mtime":1564022615698}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nexport default {\n  data: function data() {\n    return {\n      activeIndex: 0,\n      // 添加商品的表单数据对象\n      addForm: {\n        goods_name: '',\n        goods_price: '',\n        goods_weight: '',\n        goods_number: '',\n        // 商品所属的分类数组\n        goods_cat: [],\n        // 图片的数组\n        pics: [],\n        // 商品的详情描述\n        goods_introduce: '',\n        attrs: []\n      },\n      addFormRules: {\n        goods_name: [{\n          required: true,\n          message: '请输入商品名称',\n          trigger: 'blur'\n        }],\n        goods_price: [{\n          required: true,\n          message: '请输入商品价格',\n          trigger: 'blur'\n        }],\n        goods_weight: [{\n          required: true,\n          message: '请输入商品重量',\n          trigger: 'blur'\n        }],\n        goods_number: [{\n          required: true,\n          message: '请输入商品数量',\n          trigger: 'blur'\n        }],\n        goods_cat: [{\n          required: true,\n          message: '请选择商品分类',\n          trigger: 'blur'\n        }]\n      },\n      // 商品分类列表\n      catelist: [],\n      cateProps: {\n        label: 'cat_name',\n        value: 'cat_id',\n        children: 'children'\n      },\n      // 动态参数列表数据\n      manyTableData: [],\n      // 静态属性列表数据\n      onlyTableData: [],\n      // 上传图片的URL地址\n      uploadURL: 'http://127.0.0.1:8888/api/private/v1/upload',\n      // 图片上传组件的headers请求头对象\n      headerObj: {\n        Authorization: window.sessionStorage.getItem('token')\n      },\n      // 图片的路径\n      previewPath: '',\n      //图片预览窗口\n      previewVisible: false\n    };\n  },\n  created: function created() {\n    this.getCateList();\n  },\n  methods: {\n    // 获取所有商品分类数据\n    getCateList: function () {\n      var _getCateList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('categories');\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取商品分类数据失败！'));\n\n              case 6:\n                this.catelist = res.data;\n                console.log(this.catelist);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCateList() {\n        return _getCateList.apply(this, arguments);\n      }\n\n      return getCateList;\n    }(),\n    handleChange: function handleChange() {\n      console.log(this.addForm.goods_cat);\n\n      if (this.addForm.goods_cat.length !== 3) {\n        this.addForm.goods_cat = [];\n      }\n    },\n    beforeTabLeave: function beforeTabLeave(activeName, oldActiveName) {\n      // console.log('即将离开的标签页名字是：' + oldActiveName)\n      // console.log('即将进入的标签页名字是：' + activeName)\n      // return false\n      if (oldActiveName === '0' && this.addForm.goods_cat.length !== 3) {\n        this.$message.error('请先选择商品分类！');\n        return false;\n      }\n    },\n    tabClicked: function () {\n      var _tabClicked = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref2, res, _ref3, _res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.activeIndex === '1')) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.$http.get(\"categories/\".concat(this.cateId, \"/attributes\"), {\n                  params: {\n                    sel: 'many'\n                  }\n                });\n\n              case 3:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('获取动态参数列表失败！'));\n\n              case 7:\n                console.log(res.data);\n                res.data.forEach(function (item) {\n                  item.attr_vals = item.attr_vals.length === 0 ? [] : item.attr_vals.split(' ');\n                });\n                this.manyTableData = res.data;\n                _context2.next = 21;\n                break;\n\n              case 12:\n                if (!(this.activeIndex === '2')) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                _context2.next = 15;\n                return this.$http.get(\"categories/\".concat(this.cateId, \"/attributes\"), {\n                  params: {\n                    sel: 'only'\n                  }\n                });\n\n              case 15:\n                _ref3 = _context2.sent;\n                _res = _ref3.data;\n\n                if (!(_res.meta.status !== 200)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('获取静态属性失败！'));\n\n              case 19:\n                console.log(_res.data);\n                this.onlyTableData = _res.data;\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function tabClicked() {\n        return _tabClicked.apply(this, arguments);\n      }\n\n      return tabClicked;\n    }(),\n    // 处理图片预览效果\n    handlePreview: function handlePreview(file) {\n      console.log(file);\n      this.previewPath = file.response.data.url;\n      this.previewVisible = true;\n    },\n    // 处理移除图片的操作\n    handleRemove: function handleRemove(file) {\n      // 1. 获取将要删除的图片的临时路径\n      var filePath = file.response.data.tmp_path; // 2. 从 pics 数组中，找到这个图片对应的索引值\n\n      var i = this.addForm.pics.findIndex(function (x) {\n        return x.pic === filePath;\n      }); // 3. 调用数组的 splice 方法，把图片信息对象，从 pics 数组中移除\n\n      this.addForm.pics.splice(i, 1);\n    },\n    // 监听图片上传成功的事件\n    handleSuccess: function handleSuccess(res) {\n      this.addForm.pics.push({\n        pic: res.data.tmp_path\n      });\n    },\n    // 添加商品\n    add: function add() {\n      var _this = this;\n\n      this.$refs.addFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee3(valid) {\n          var form, _ref5, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this.$message.error('请填写必要的表单项！'));\n\n                case 2:\n                  // 执行添加的业务逻辑\n                  // lodash   cloneDeep(obj)\n                  form = _.cloneDeep(_this.addForm);\n                  form.goods_cat = form.goods_cat.join(','); // 处理动态参数\n\n                  _this.manyTableData.forEach(function (item) {\n                    var newInfo = {\n                      attr_id: item.attr_id,\n                      attr_value: item.attr_vals.join(' ')\n                    };\n\n                    _this.addForm.attrs.push(newInfo);\n                  }); // 处理静态属性\n\n\n                  _this.onlyTableData.forEach(function (item) {\n                    var newInfo = {\n                      attr_id: item.attr_id,\n                      attr_value: item.attr_vals\n                    };\n\n                    _this.addForm.attrs.push(newInfo);\n                  });\n\n                  form.attrs = _this.addForm.attrs;\n                  console.log(form); // 发起请求添加商品\n                  // 商品的名称，必须是唯一的\n\n                  _context3.next = 10;\n                  return _this.$http.post('goods', form);\n\n                case 10:\n                  _ref5 = _context3.sent;\n                  res = _ref5.data;\n\n                  if (!(res.meta.status !== 201)) {\n                    _context3.next = 14;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this.$message.error('添加商品失败！'));\n\n                case 14:\n                  _this.$message.success('添加商品成功！');\n\n                  _this.$router.push('/goods');\n\n                case 16:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  },\n  computed: {\n    cateId: function cateId() {\n      if (this.addForm.goods_cat.length === 3) {\n        return this.addForm.goods_cat[2];\n      }\n\n      return null;\n    }\n  }\n};",{"version":3,"sources":["Add.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"add\">\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>添加商品</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 提示区域 -->\n      <el-alert title=\"添加商品信息\" type=\"info\" center show-icon :closable=\"false\"></el-alert>\n      <!-- 步骤条区域   :active=\"activeIndex - 0\" -->\n      <el-steps :space=\"200\" finish-status=\"success\" :active=\"activeIndex - 0\" align-center>\n        <el-step title=\"基本信息\"></el-step>\n        <el-step title=\"商品参数\"></el-step>\n        <el-step title=\"商品属性\"></el-step>\n        <el-step title=\"商品图片\"></el-step>\n        <el-step title=\"商品内容\"></el-step>\n        <el-step title=\"完成\"></el-step>\n      </el-steps>\n      <!-- tab栏区域 -->\n\n      <el-form\n        :model=\"addForm\"\n        :rules=\"addFormRules\"\n        ref=\"addFormRef\"\n        label-width=\"100px\"\n        label-position=\"top\"\n      >\n        <el-tabs\n          v-model=\"activeIndex\"\n          :tab-position=\"'left'\"\n          :before-leave=\"beforeTabLeave\"\n          @tab-click=\"tabClicked\"\n        >\n          <el-tab-pane label=\"基本信息\" name=\"0\">\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\n              <el-input v-model=\"addForm.goods_name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\n              <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\n              <el-input v-model=\"addForm.goods_weight\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\n              <el-input v-model=\"addForm.goods_number\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品分类\" prop=\"goods_cat\">\n              <el-cascader\n                expand-trigger=\"hover\"\n                :options=\"catelist\"\n                :props=\"cateProps\"\n                v-model=\"addForm.goods_cat\"\n                @change=\"handleChange\"\n              ></el-cascader>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品参数\" name=\"1\">\n            <!-- 渲染表单的Item项 -->\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in manyTableData\" :key=\"item.attr_id\">\n              <!-- 复选框组 -->\n              <el-checkbox-group v-model=\"item.attr_vals\">\n                <el-checkbox :label=\"cb\" v-for=\"(cb, i) in item.attr_vals\" :key=\"i\" border></el-checkbox>\n              </el-checkbox-group>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品属性\" name=\"2\">\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in onlyTableData\" :key=\"item.attr_id\">\n              <el-input v-model=\"item.attr_vals\"></el-input>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane label=\"商品图片\" name=\"3\">商品图片</el-tab-pane>\n          <!-- action 表示图片要上传到的后台API地址 -->\n          <el-upload\n            :action=\"uploadURL\"\n            :on-preview=\"handlePreview\"\n            :on-remove=\"handleRemove\"\n            list-type=\"picture\"\n            :headers=\"headerObj\"\n            :on-success=\"handleSuccess\"\n          >\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n          </el-upload>\n          <el-tab-pane label=\"商品内容\" name=\"4\">商品内容\n                        <!-- 富文本编辑器组件 -->\n            <quill-editor v-model=\"addForm.goods_introduce\"></quill-editor>\n                        <!-- 添加商品的按钮 -->\n            <el-button type=\"primary\" class=\"btnAdd\" @click=\"add\">添加商品</el-button>\n          </el-tab-pane>\n        </el-tabs>\n      </el-form>\n    </el-card>\n        <!-- 图片预览 -->\n    <el-dialog title=\"图片预览\" :visible.sync=\"previewVisible\" width=\"50%\">\n      <img :src=\"previewPath\" alt=\"\" class=\"previewImg\">\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport _ from 'lodash'\nexport default {\n  data: () => ({\n    activeIndex: 0,\n    // 添加商品的表单数据对象\n    addForm: {\n      goods_name: '',\n      goods_price: '',\n      goods_weight: '',\n      goods_number: '',\n      // 商品所属的分类数组\n      goods_cat: [],\n      // 图片的数组\n      pics: [],\n            // 商品的详情描述\n        goods_introduce: '',\n        attrs: []\n\n    },\n    addFormRules: {\n      goods_name: [\n        { required: true, message: '请输入商品名称', trigger: 'blur' }\n      ],\n      goods_price: [\n        { required: true, message: '请输入商品价格', trigger: 'blur' }\n      ],\n      goods_weight: [\n        { required: true, message: '请输入商品重量', trigger: 'blur' }\n      ],\n      goods_number: [\n        { required: true, message: '请输入商品数量', trigger: 'blur' }\n      ],\n      goods_cat: [\n        { required: true, message: '请选择商品分类', trigger: 'blur' }\n      ]\n    },\n    // 商品分类列表\n    catelist: [],\n    cateProps: {\n      label: 'cat_name',\n      value: 'cat_id',\n      children: 'children'\n    },\n    // 动态参数列表数据\n    manyTableData: [],\n    // 静态属性列表数据\n    onlyTableData: [],\n    // 上传图片的URL地址\n    uploadURL: 'http://127.0.0.1:8888/api/private/v1/upload',\n    // 图片上传组件的headers请求头对象\n    headerObj: {\n      Authorization: window.sessionStorage.getItem('token')\n    },\n    // 图片的路径\n    previewPath: '',\n    //图片预览窗口\n    previewVisible: false\n  }),\n  created() {\n    this.getCateList()\n  },\n  methods: {\n    // 获取所有商品分类数据\n    async getCateList() {\n      const { data: res } = await this.$http.get('categories')\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品分类数据失败！')\n      }\n\n      this.catelist = res.data\n      console.log(this.catelist)\n    },\n    handleChange() {\n      console.log(this.addForm.goods_cat)\n      if (this.addForm.goods_cat.length !== 3) {\n        this.addForm.goods_cat = []\n      }\n    },\n    beforeTabLeave(activeName, oldActiveName) {\n      // console.log('即将离开的标签页名字是：' + oldActiveName)\n      // console.log('即将进入的标签页名字是：' + activeName)\n      // return false\n      if (oldActiveName === '0' && this.addForm.goods_cat.length !== 3) {\n        this.$message.error('请先选择商品分类！')\n        return false\n      }\n    },\n    async tabClicked() {\n      // console.log(this.activeIndex)\n      // 证明访问的是动态参数面板\n      if (this.activeIndex === '1') {\n        const { data: res } = await this.$http.get(\n          `categories/${this.cateId}/attributes`,\n          {\n            params: { sel: 'many' }\n          }\n        )\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('获取动态参数列表失败！')\n        }\n\n        console.log(res.data)\n        res.data.forEach(item => {\n          item.attr_vals =\n            item.attr_vals.length === 0 ? [] : item.attr_vals.split(' ')\n        })\n        this.manyTableData = res.data\n      } else if (this.activeIndex === '2') {\n        const { data: res } = await this.$http.get(\n          `categories/${this.cateId}/attributes`,\n          {\n            params: { sel: 'only' }\n          }\n        )\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('获取静态属性失败！')\n        }\n\n        console.log(res.data)\n        this.onlyTableData = res.data\n      }\n    },\n    // 处理图片预览效果\n    handlePreview(file) {\n      console.log(file)\n      this.previewPath = file.response.data.url\n      this.previewVisible = true\n    },\n    // 处理移除图片的操作\n    handleRemove(file) {\n      // 1. 获取将要删除的图片的临时路径\n      const filePath = file.response.data.tmp_path\n      // 2. 从 pics 数组中，找到这个图片对应的索引值\n      const i = this.addForm.pics.findIndex(x => x.pic === filePath)\n      // 3. 调用数组的 splice 方法，把图片信息对象，从 pics 数组中移除\n      this.addForm.pics.splice(i, 1)\n    },\n    // 监听图片上传成功的事件\n    handleSuccess(res) {\n      this.addForm.pics.push({ pic: res.data.tmp_path })\n    },\n        // 添加商品\n    add() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) {\n          return this.$message.error('请填写必要的表单项！')\n        }\n        // 执行添加的业务逻辑\n        // lodash   cloneDeep(obj)\n        const form = _.cloneDeep(this.addForm)\n        form.goods_cat = form.goods_cat.join(',')\n        // 处理动态参数\n        this.manyTableData.forEach(item => {\n          const newInfo = {\n            attr_id: item.attr_id,\n            attr_value: item.attr_vals.join(' ')\n          }\n          this.addForm.attrs.push(newInfo)\n        })\n        // 处理静态属性\n        this.onlyTableData.forEach(item => {\n          const newInfo = { attr_id: item.attr_id, attr_value: item.attr_vals }\n          this.addForm.attrs.push(newInfo)\n        })\n        form.attrs = this.addForm.attrs\n        console.log(form)\n\n        // 发起请求添加商品\n        // 商品的名称，必须是唯一的\n        const { data: res } = await this.$http.post('goods', form)\n\n        if (res.meta.status !== 201) {\n          return this.$message.error('添加商品失败！')\n        }\n\n        this.$message.success('添加商品成功！')\n        this.$router.push('/goods')\n      })\n    }\n\n  },\n  computed: {\n    cateId() {\n      if (this.addForm.goods_cat.length === 3) {\n        return this.addForm.goods_cat[2]\n      }\n      return null\n    }\n  }\n}\n</script lang=\"less\"scoped>\n<style >\n.el-checkbox {\n  margin: 0 10px 0 0 !important;\n}\n.previewImg {\n  width: 100%;\n}\n\n.btnAdd {\n  margin-top: 15px;\n}\n</style>"],"sourceRoot":"src/components/goods"}]}