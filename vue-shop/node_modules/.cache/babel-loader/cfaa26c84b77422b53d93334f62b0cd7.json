{"remainingRequest":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/power/Roles/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/power/Roles/index.vue","mtime":1563757275027},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js","mtime":1564022599683},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js","mtime":1564022615698}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      id: '',\n      editright: false,\n      //添加用户的表单数据\n      userForm: {\n        roleName: '',\n        roleDesc: ''\n      },\n      addright: false,\n      // 所有角色列表数据\n      roles: [],\n      // 控制分配权限对话框的显示与隐藏\n      setRightDialogVisible: false,\n      // 所有权限的数据\n      rightslist: [],\n      // 树形控件的属性绑定对象\n      treeProps: {\n        label: 'authName',\n        children: 'children'\n      },\n      // 默认选中的节点Id值数组\n      defKeys: [],\n      // 当前即将分配权限的角色id\n      roleId: '',\n      addFromRules: {\n        roleName: [{\n          required: true,\n          message: '请输入角色名称',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3~10个字符之间',\n          trigger: 'blur'\n        }],\n        roleDesc: [{\n          required: true,\n          message: '请输入角色名称',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3~10个字符之间',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getRoles();\n  },\n  methods: {\n    getRoles: function () {\n      var _getRoles = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, _ref$data, data, meta;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('roles');\n\n              case 2:\n                _ref = _context.sent;\n                _ref$data = _ref.data;\n                data = _ref$data.data;\n                meta = _ref$data.meta;\n\n                if (!(meta.status !== 200)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error(meta.msg));\n\n              case 8:\n                this.roles = data;\n                console.log(data);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getRoles() {\n        return _getRoles.apply(this, arguments);\n      }\n\n      return getRoles;\n    }(),\n    // 根据Id删除对应的权限\n    removeRightById: function () {\n      var _removeRightById = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(role, rightId) {\n        var confirmResult, _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context2.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.info('取消了删除！'));\n\n              case 5:\n                _context2.next = 7;\n                return this.$http.delete(\"roles/\".concat(role.id, \"/rights/\").concat(rightId));\n\n              case 7:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('删除权限失败！'));\n\n              case 11:\n                role.children = res.data;\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function removeRightById(_x, _x2) {\n        return _removeRightById.apply(this, arguments);\n      }\n\n      return removeRightById;\n    }(),\n    //展示分配权限的对话框\n    showSetRightDialog: function () {\n      var _showSetRightDialog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(role) {\n        var _ref3, res;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.roleId = role.id; //获取所以的权限的数据\n\n                _context3.next = 3;\n                return this.$http.get('rights/tree');\n\n              case 3:\n                _ref3 = _context3.sent;\n                res = _ref3.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error('获取权限数据失败'));\n\n              case 7:\n                //把获取的权限数据保存到data 中\n                this.rightslist = res.data;\n                console.log(this.rightslist); // 递归获取三级节点的Id\n\n                this.getLeafKeys(role, this.defKeys);\n                this.setRightDialogVisible = true;\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function showSetRightDialog(_x3) {\n        return _showSetRightDialog.apply(this, arguments);\n      }\n\n      return showSetRightDialog;\n    }(),\n    // 通过递归的形式，获取角色下所有三级权限的id，并保存到 defKeys 数组中\n    getLeafKeys: function getLeafKeys(node, arr) {\n      var _this = this;\n\n      // 如果当前 node 节点不包含 children 属性，则是三级节点\n      if (!node.children) {\n        return arr.push(node.id);\n      }\n\n      node.children.forEach(function (item) {\n        return _this.getLeafKeys(item, arr);\n      });\n    },\n    // 监听分配权限对话框的关闭事件\n    setRightDialogClosed: function setRightDialogClosed() {\n      this.defKeys = [];\n    },\n    // 点击为角色分配权限\n    allotRights: function () {\n      var _allotRights = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var keys, idStr, _ref4, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                keys = [].concat(_toConsumableArray(this.$refs.treeRef.getCheckedKeys()), _toConsumableArray(this.$refs.treeRef.getHalfCheckedKeys()));\n                idStr = keys.join(',');\n                _context4.next = 4;\n                return this.$http.post(\"roles/\".concat(this.roleId, \"/rights\"), {\n                  rids: idStr\n                });\n\n              case 4:\n                _ref4 = _context4.sent;\n                res = _ref4.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error('分配权限失败！'));\n\n              case 8:\n                this.$message.success('分配权限成功！');\n                this.getRoles();\n                this.setRightDialogVisible = false;\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function allotRights() {\n        return _allotRights.apply(this, arguments);\n      }\n\n      return allotRights;\n    }(),\n    // 点击按钮，添加新用户\n    addUser: function () {\n      var _addUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var _ref5, res;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.$http.post('roles', this.userForm);\n\n              case 2:\n                _ref5 = _context5.sent;\n                res = _ref5.data;\n\n                if (res.meta.status !== 201) {\n                  this.$message.error('添加用户失败！');\n                }\n\n                console.log(res.data);\n                this.$message.success('添加用户成功！'); // 隐藏添加用户的对话框\n\n                this.addright = false; // 重新获取用户列表数据\n\n                this.getRoles();\n                this.userForm = {};\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function addUser() {\n        return _addUser.apply(this, arguments);\n      }\n\n      return addUser;\n    }(),\n    // 根据Id删除对应的用户信息\n    removeUserById: function () {\n      var _removeUserById = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(id) {\n        var _ref6, res;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                });\n\n              case 3:\n                _context6.next = 5;\n                return this.$http.delete('roles/' + id);\n\n              case 5:\n                _ref6 = _context6.sent;\n                res = _ref6.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", this.$message.error('删除用户失败！'));\n\n              case 9:\n                // 刷新数据列表\n                this.getRoles();\n                this.$message.success('删除用户成功！');\n                _context6.next = 16;\n                break;\n\n              case 13:\n                _context6.prev = 13;\n                _context6.t0 = _context6[\"catch\"](0);\n                this.$message.info('已经撤销删除');\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 13]]);\n      }));\n\n      function removeUserById(_x4) {\n        return _removeUserById.apply(this, arguments);\n      }\n\n      return removeUserById;\n    }(),\n    editRight: function () {\n      var _editRight = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(id) {\n        var _ref7, _ref7$data, data, meta;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.id = id;\n                console.log(id);\n                _context7.next = 4;\n                return this.$http.get('roles/' + id);\n\n              case 4:\n                _ref7 = _context7.sent;\n                _ref7$data = _ref7.data;\n                data = _ref7$data.data;\n                meta = _ref7$data.meta;\n\n                if (!(meta.status !== 200)) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", this.$message.error('获取用户失败！'));\n\n              case 10:\n                this.$message.success('获取用户成功！');\n                this.userForm.roleName = data.roleName;\n                this.userForm.roleDesc = data.roleDesc;\n                this.editright = true;\n\n              case 14:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function editRight(_x5) {\n        return _editRight.apply(this, arguments);\n      }\n\n      return editRight;\n    }(),\n    editUser: function () {\n      var _editUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var _ref8, _ref8$data, data, meta;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$http.put('roles/' + this.id, this.userForm);\n\n              case 2:\n                _ref8 = _context8.sent;\n                _ref8$data = _ref8.data;\n                data = _ref8$data.data;\n                meta = _ref8$data.meta;\n\n                if (!(meta.status !== 200)) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.error('获取用户失败！'));\n\n              case 8:\n                this.$message.success('获取用户成功！');\n                this.userForm = {\n                  roleName: '',\n                  roleDesc: ''\n                };\n                this.editright = false;\n                this.getRoles();\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function editUser() {\n        return _editUser.apply(this, arguments);\n      }\n\n      return editUser;\n    }()\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"roles\">\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 添加角色按钮区域 -->\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"addright=true\">添加角色</el-button>\n        </el-col>\n        \n      </el-row>\n      <!-- 角色列表区域 -->\n      <el-table :data=\"roles\" border stripe>\n        <!-- 展开列 -->\n        <el-table-column type=\"expand\">\n          <template slot-scope=\"scope\">\n            <el-row\n              :class=\"['bdbottom',{bdtop:index == 0}]\"\n              v-for=\"(item1,index) in scope.row.children\"\n              :key=\"item1.id\"\n            >\n              <!-- 渲染一级权限 -->\n              <el-col :span=\"5\">\n                <el-tag closable @close=\"removeRightById(scope.row, item1.id)\">{{item1.authName}}</el-tag>\n                <i class=\"el-icon-caret-right\"></i>\n              </el-col>\n              <!-- 渲染二级和三级权限 -->\n              <el-col :span=\"19\">\n                <!-- 通过 for 循环 嵌套渲染二级权限 -->\n                <el-row\n                  :class=\"[i2 === 0 ? '' : 'bdtop', 'vcenter']\"\n                  v-for=\"(item2, i2) in item1.children\"\n                  :key=\"item2.id\"\n                >\n                  <el-col :span=\"6\">\n                    <el-tag\n                      type=\"success\"\n                      closable\n                      @close=\"removeRightById(scope.row, item2.id)\"\n                    >{{item2.authName}}</el-tag>\n                    <i class=\"el-icon-caret-right\"></i>\n                  </el-col>\n                  <el-col :span=\"18\">\n                    <el-tag\n                      type=\"warning\"\n                      v-for=\"item3 in item2.children\"\n                      :key=\"item3.id\"\n                      closable\n                      @close=\"removeRightById(scope.row, item3.id)\"\n                    >{{item3.authName}}</el-tag>\n                  </el-col>\n                </el-row>\n              </el-col>\n            </el-row>\n\n            <!-- <pre>\n              {{scope.row}}\n            </pre>-->\n          </template>\n        </el-table-column>\n        <!-- 索引列 -->\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\n        <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"300px\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"editRight(scope.row.id)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\"   @click=\"removeUserById(scope.row.id)\">删除</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"warning\"\n              icon=\"el-icon-setting\"\n              @click=\"showSetRightDialog(scope.row)\"\n            >分配权限</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 分配权限的对话框 -->\n    <el-dialog\n      title=\"分配权限\"\n      :visible.sync=\"setRightDialogVisible\"\n      width=\"50%\"\n      @close=\"setRightDialogClosed\"\n    >\n      <!-- 树形控件 -->\n      <el-tree\n        :data=\"rightslist\"\n        :props=\"treeProps\"\n        show-checkbox\n        node-key=\"id\"\n        default-expand-all\n        :default-checked-keys=\"defKeys\"\n        ref=\"treeRef\"\n      ></el-tree>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      title=\"分配权限\"\n      :visible.sync=\"addright\"\n      width=\"50%\"\n      \n    >\n      <!--添加 -->\n      <el-form  :model=\"userForm\"  :rules=\"addFromRules\"  ref=\"addFormRef\" label-width=\"80px\">\n  <el-form-item label=\"角色名称\" prop=\"roleName\">\n    <el-input v-model=\"userForm.roleName\"></el-input>\n  </el-form-item>\n  <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n    <el-input v-model=\"userForm.roleDesc\"></el-input>\n  </el-form-item>\n  </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addright = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      title=\"分配权限\"\n      :visible.sync=\"editright\"\n      width=\"50%\"\n      \n    >\n      <!-- 编辑 -->\n      <el-form   label-width=\"80px\">\n  <el-form-item label=\"活动名称\">\n    <el-input v-model=\"userForm.roleName\"></el-input>\n  </el-form-item>\n  <el-form-item label=\"活动名称\">\n    <el-input v-model=\"userForm.roleDesc\"></el-input>\n  </el-form-item>\n  </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editright = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\nexport default {\n  data: () => ({\n    id: '',\n    editright: false,\n     //添加用户的表单数据\n    userForm: {\n      roleName : '',\n      roleDesc : '',\n    }, \n    addright: false,\n    // 所有角色列表数据\n    roles: [],\n    // 控制分配权限对话框的显示与隐藏\n    setRightDialogVisible: false,\n    // 所有权限的数据\n    rightslist: [],\n        // 树形控件的属性绑定对象\n    treeProps: {\n        label: 'authName',\n        children: 'children'\n      },\n      // 默认选中的节点Id值数组\n      defKeys: [],\n      // 当前即将分配权限的角色id\n      roleId: '',\n     \n      addFromRules:{\n        roleName:[\n          {required:true,message:'请输入角色名称',trigger:'blur'},\n          {\n            min:3,\n            max:10,\n            message: '用户名的长度在3~10个字符之间',\n            trigger:'blur'\n          }\n        ],\n             roleDesc:[\n          {required:true,message:'请输入角色名称',trigger:'blur'},\n          {\n            min:3,\n            max:10,\n            message: '用户名的长度在3~10个字符之间',\n            trigger:'blur'\n          }\n        ],\n      }\n\n  }),\n  created() {\n    this.getRoles()\n  },\n  methods: {\n    async getRoles() {\n      const {\n        data: { data, meta }\n      } = await this.$http.get('roles')\n      if (meta.status !== 200) return this.$message.error(meta.msg)\n      this.roles = data\n      console.log(data)\n    },\n      \n    // 根据Id删除对应的权限\n    async removeRightById(role, rightId) {\n      // 弹框提示用户是否要删除\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该文件, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('取消了删除！')\n      }\n\n      const { data: res } = await this.$http.delete(\n        `roles/${role.id}/rights/${rightId}`\n      )\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('删除权限失败！')\n      }\n      role.children = res.data\n    },\n    //展示分配权限的对话框\n    async showSetRightDialog(role) {\n      this.roleId = role.id\n      //获取所以的权限的数据\n      const { data: res } = await this.$http.get('rights/tree')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取权限数据失败')\n      }\n      //把获取的权限数据保存到data 中\n      this.rightslist = res.data\n      console.log(this.rightslist)\n      // 递归获取三级节点的Id\n      this.getLeafKeys(role, this.defKeys)\n\n      this.setRightDialogVisible = true\n    },\n    // 通过递归的形式，获取角色下所有三级权限的id，并保存到 defKeys 数组中\n    getLeafKeys(node, arr) {\n      // 如果当前 node 节点不包含 children 属性，则是三级节点\n      if (!node.children) {\n        return arr.push(node.id)\n      }\n\n      node.children.forEach(item => this.getLeafKeys(item, arr))\n    },\n    // 监听分配权限对话框的关闭事件\n    setRightDialogClosed() {\n      this.defKeys = []\n    },\n    // 点击为角色分配权限\n    async allotRights() {\n      const keys = [\n        ...this.$refs.treeRef.getCheckedKeys(),\n        ...this.$refs.treeRef.getHalfCheckedKeys()\n      ]\n\n      const idStr = keys.join(',')\n\n      const { data: res } = await this.$http.post(\n        `roles/${this.roleId}/rights`,\n        { rids: idStr }\n      )\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('分配权限失败！')\n      }\n\n      this.$message.success('分配权限成功！')\n      this.getRoles()\n      this.setRightDialogVisible = false\n    },\n        // 点击按钮，添加新用户\n    async addUser() {\n      \n        // 可以发起添加用户的网络请求\n        const { data: res } = await this.$http.post('roles', this.userForm)\n\n        if (res.meta.status !== 201) {\n          this.$message.error('添加用户失败！')\n        }\n        console.log(res.data)\n\n        this.$message.success('添加用户成功！')\n        // 隐藏添加用户的对话框\n        this.addright = false\n        // 重新获取用户列表数据\n        this.getRoles()\n        this.userForm = {}\n    },\n        // 根据Id删除对应的用户信息\n    async removeUserById(id) {\n      try {\n        // 如果用户确认删除，则返回值为字符串 confirm\n        // 如果用户取消了删除，则返回值为字符串 cancel\n        // console.log(confirmResult)\n        await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        const { data: res } = await this.$http.delete('roles/' + id)\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除用户失败！')\n        }\n         // 刷新数据列表\n        this.getRoles()\n        \n        this.$message.success('删除用户成功！')\n       \n      } catch (err) {\n        this.$message.info('已经撤销删除')\n      }\n    },\n    async editRight(id) {\n      this.id = id\n      \n      console.log(id)\n      const { data:{ data, meta } } = await this.$http.get('roles/' + id)\n      if(meta.status !== 200) return this.$message.error('获取用户失败！')\n      this.$message.success('获取用户成功！')\n      this.userForm.roleName = data.roleName\n      this.userForm.roleDesc = data.roleDesc\n      this.editright = true\n    },\n    async editUser() {\n      const { data:{ data, meta } } = await this.$http.put('roles/' + this.id,this.userForm)\n      if(meta.status !== 200) return this.$message.error('获取用户失败！')\n      this.$message.success('获取用户成功！')\n      this.userForm = {\n        roleName: '',\n        roleDesc: ''\n      }\n      this.editright = false\n      this.getRoles()\n    }\n  }\n}\n</script lang=\"less\"scoped>\n<style lang=\"less\" scoped>\n.el-tag {\n  margin: 7px;\n}\n\n.bdtop {\n  border-top: 1px solid #eee;\n}\n\n.bdbottom {\n  border-bottom: 1px solid #eee;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n}\n</style>"],"sourceRoot":"src/components/power/Roles"}]}