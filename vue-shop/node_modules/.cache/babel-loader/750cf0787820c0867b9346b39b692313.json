{"remainingRequest":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/report/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/report/Report.vue","mtime":1564052725665},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js","mtime":1564022599683},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js","mtime":1564022615698}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 1. 导入 echarts\nimport echarts from 'echarts';\nimport _ from 'lodash';\nexport default {\n  data: function data() {\n    return {\n      // 需要合并的数据\n      options: {\n        title: {\n          text: '用户来源'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#E9EEF3'\n            }\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          boundaryGap: false\n        }],\n        yAxis: [{\n          type: 'value'\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  // 此时，页面上的元素，已经被渲染完毕了！\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var myChart, _ref, res, result;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // 3. 基于准备好的dom，初始化echarts实例\n              myChart = echarts.init(document.getElementById('main'));\n              _context.next = 3;\n              return this.$http.get('reports/type/1');\n\n            case 3:\n              _ref = _context.sent;\n              res = _ref.data;\n\n              if (!(res.meta.status !== 200)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", this.$message.error('获取折线图数据失败！'));\n\n            case 7:\n              // 4. 准备数据和配置项\n              result = _.merge(res.data, this.options); // 5. 展示数据\n\n              myChart.setOption(result);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {}\n};",{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAkBA;AACA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,IAAA,EAAA,OADA;AAEA,YAAA,KAAA,EAAA;AACA,cAAA,eAAA,EAAA;AADA;AAFA;AAFA,SAJA;AAaA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SAbA;AAmBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,WAAA,EAAA;AADA,SADA,CAnBA;AAwBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAxBA;AAFA,KAAA;AAiCA,GAnCA;AAoCA,EAAA,OApCA,qBAoCA,CAAA,CApCA;AAqCA;AACA,EAAA,OAtCA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAuCA;AACA,cAAA,OAxCA,GAwCA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAxCA;AAAA;AAAA,qBA0CA,KAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,CA1CA;;AAAA;AAAA;AA0CA,cAAA,GA1CA,QA0CA,IA1CA;;AAAA,oBA2CA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GA3CA;AAAA;AAAA;AAAA;;AAAA,+CA4CA,KAAA,QAAA,CAAA,KAAA,CAAA,YAAA,CA5CA;;AAAA;AA+CA;AACA,cAAA,MAhDA,GAgDA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,OAAA,CAhDA,EAkDA;;AACA,cAAA,OAAA,CAAA,SAAA,CAAA,MAAA;;AAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqDA,EAAA,OAAA,EAAA;AArDA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 2. 为ECharts准备一个具备大小（宽高）的Dom -->\r\n      <div id=\"main\" style=\"width: 750px;height:400px;\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 1. 导入 echarts\r\nimport echarts from 'echarts'\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 需要合并的数据\r\n      options: {\r\n        title: {\r\n          text: '用户来源'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#E9EEF3'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            boundaryGap: false\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {},\r\n  // 此时，页面上的元素，已经被渲染完毕了！\r\n  async mounted() {\r\n    // 3. 基于准备好的dom，初始化echarts实例\r\n    var myChart = echarts.init(document.getElementById('main'))\r\n\r\n    const { data: res } = await this.$http.get('reports/type/1')\r\n    if (res.meta.status !== 200) {\r\n      return this.$message.error('获取折线图数据失败！')\r\n    }\r\n\r\n    // 4. 准备数据和配置项\r\n    const result = _.merge(res.data, this.options)\r\n\r\n    // 5. 展示数据\r\n    myChart.setOption(result)\r\n  },\r\n  methods: {}\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"],"sourceRoot":"src/components/report"}]}