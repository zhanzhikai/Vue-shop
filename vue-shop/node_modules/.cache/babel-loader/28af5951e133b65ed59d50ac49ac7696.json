{"remainingRequest":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/goods/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/goods/List.vue","mtime":1563952626165},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js","mtime":1564022599683},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js","mtime":1564022615698}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 查询参数对象\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      // 商品列表\n      goodslist: [],\n      // 总数据条数\n      total: 0\n    };\n  },\n  created: function created() {\n    this.getGoodsList();\n  },\n  methods: {\n    // 根据分页获取对应的商品列表\n    getGoodsList: function () {\n      var _getGoodsList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('goods', {\n                  params: this.queryInfo\n                });\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('获取商品列表失败！'));\n\n              case 6:\n                this.$message.success('获取商品列表成功！');\n                console.log(res.data);\n                this.goodslist = res.data.goods;\n                this.total = res.data.total;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getGoodsList() {\n        return _getGoodsList.apply(this, arguments);\n      }\n\n      return getGoodsList;\n    }(),\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getGoodsList();\n    },\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getGoodsList();\n    },\n    removeById: function () {\n      var _removeById = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(id) {\n        var _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.$confirm('此操作将永久删除该商品, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                });\n\n              case 3:\n                _context2.next = 5;\n                return this.$http.delete(\"goods/\".concat(id));\n\n              case 5:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error('删除失败！'));\n\n              case 9:\n                this.$message.success('删除成功！');\n                this.getGoodsList();\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.$message.error('撤销删除');\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 13]]);\n      }));\n\n      function removeById(_x) {\n        return _removeById.apply(this, arguments);\n      }\n\n      return removeById;\n    }(),\n    goAddpage: function goAddpage() {\n      this.$router.push('/goods/add');\n    }\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAFA;AAOA;AACA,MAAA,SAAA,EAAA,EARA;AASA;AACA,MAAA,KAAA,EAAA;AAVA,KAAA;AAAA,GADA;AAaA,EAAA,OAbA,qBAaA;AACA,SAAA,YAAA;AACA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,YAFA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,KAAA,KAAA,CAAA,GAAA,CAAA,OAAA,EAAA;AACA,kBAAA,MAAA,EAAA,KAAA;AADA,iBAAA,CAHA;;AAAA;AAAA;AAGA,gBAAA,GAHA,QAGA,IAHA;;AAAA,sBAOA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAPA;AAAA;AAAA;AAAA;;AAAA,iDAQA,KAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CARA;;AAAA;AAWA,qBAAA,QAAA,CAAA,OAAA,CAAA,WAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;AACA,qBAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,qBAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBA,IAAA,gBAhBA,4BAgBA,OAhBA,EAgBA;AACA,WAAA,SAAA,CAAA,QAAA,GAAA,OAAA;AACA,WAAA,YAAA;AACA,KAnBA;AAoBA,IAAA,mBApBA,+BAoBA,OApBA,EAoBA;AACA,WAAA,SAAA,CAAA,OAAA,GAAA,OAAA;AACA,WAAA,YAAA;AACA,KAvBA;AAwBA,IAAA,UAxBA;AAAA;AAAA;AAAA,gDAwBA,EAxBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA0BA,KAAA,QAAA,CAAA,oBAAA,EAAA,IAAA,EAAA;AACA,kBAAA,iBAAA,EAAA,IADA;AAEA,kBAAA,gBAAA,EAAA,IAFA;AAGA,kBAAA,IAAA,EAAA;AAHA,iBAAA,CA1BA;;AAAA;AAAA;AAAA,uBA+BA,KAAA,KAAA,CAAA,MAAA,iBAAA,EAAA,EA/BA;;AAAA;AAAA;AA+BA,gBAAA,GA/BA,SA+BA,IA/BA;;AAAA,sBAiCA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAjCA;AAAA;AAAA;AAAA;;AAAA,kDAkCA,KAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAlCA;;AAAA;AAqCA,qBAAA,QAAA,CAAA,OAAA,CAAA,OAAA;AACA,qBAAA,YAAA;AAtCA;AAAA;;AAAA;AAAA;AAAA;AAwCA,qBAAA,QAAA,CAAA,KAAA,CAAA,MAAA;;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA2CA,IAAA,SA3CA,uBA2CA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,YAAA;AACA;AA7CA;AAhBA,CAAA","sourcesContent":["<template>\n  <div class=\"list\">\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <!-- 绑定的函数是在input框上 -->\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @keyup.enter.native=\"getGoodsList\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getGoodsList\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"goAddpage\">添加商品</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- table表格区域 -->\n      <el-table :data=\"goodslist\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"商品名称\" prop=\"goods_name\"></el-table-column>\n        <el-table-column label=\"商品价格(元)\" prop=\"goods_price\" width=\"95px\" align=\"center\"></el-table-column>\n        <el-table-column label=\"商品重量\" prop=\"goods_weight\" width=\"70px\" align=\"center\"></el-table-column>\n        <el-table-column label=\"创建时间\" prop=\"add_time\" width=\"140px\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.add_time | dateFormat}}</template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"130px\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" align=\"center\"></el-button>\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n              @click=\"removeById(scope.row.goods_id)\"\n              align=\"center\"\n            ></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页区域 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[5, 10, 15, 20]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        background\n      ></el-pagination>\n    </el-card>\n  </div>\n</template>\n<script>\nexport default {\n  data: () => ({\n    // 查询参数对象\n    queryInfo: {\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    },\n    // 商品列表\n    goodslist: [],\n    // 总数据条数\n    total: 0\n  }),\n  created() {\n    this.getGoodsList()\n  },\n  methods: {\n    // 根据分页获取对应的商品列表\n    async getGoodsList() {\n      const { data: res } = await this.$http.get('goods', {\n        params: this.queryInfo\n      })\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品列表失败！')\n      }\n\n      this.$message.success('获取商品列表成功！')\n      console.log(res.data)\n      this.goodslist = res.data.goods\n      this.total = res.data.total\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getGoodsList()\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getGoodsList()\n    },\n    async removeById(id) {\n      try {\n        await this.$confirm('此操作将永久删除该商品, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        const { data: res } = await this.$http.delete(`goods/${id}`)\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除失败！')\n        }\n\n        this.$message.success('删除成功！')\n        this.getGoodsList()\n      } catch (err) {\n        this.$message.error('撤销删除')\n      }\n    },\n    goAddpage() {\n      this.$router.push('/goods/add')\n    }\n  }\n}\n</script lang=\"less\"scoped>\n<style >\n</style>"],"sourceRoot":"src/components/goods"}]}