{"remainingRequest":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/goods/Cate.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/goods/Cate.vue","mtime":1563966883975},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/css-loader/index.js","mtime":1564022615061},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1564022615698},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/postcss-loader/src/index.js","mtime":1564022615590},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js","mtime":1564022615698}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.treeTable {\n  margin-top: 15px;\n}\n\n.el-cascader {\n  width: 100%;\n}\n",{"version":3,"sources":["Cate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkXA;AACA;AACA;;AAEA;AACA;AACA","file":"Cate.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\n  <div class=\"cate\">\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- 表格 -->\n      <tree-table\n        class=\"treeTable\"\n        :data=\"catelist\"\n        :columns=\"columns\"\n        :selection-type=\"false\"\n        :expand-type=\"false\"\n        show-index\n        index-text=\"#\"\n        border\n        :show-row-hover=\"false\"\n      >\n        <!-- 是否有效 -->\n        <template slot=\"isok\" slot-scope=\"scope\">\n          <i\n            class=\"el-icon-success\"\n            v-if=\"scope.row.cat_deleted === false\"\n            style=\"color: lightgreen;\"\n          ></i>\n          <i class=\"el-icon-error\" v-else style=\"color: red;\"></i>\n        </template>\n\n        <!-- 排序 -->\n        <template slot=\"order\" slot-scope=\"scope\">\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level===0\">一级</el-tag>\n          <el-tag type=\"success\" size=\"mini\" v-else-if=\"scope.row.cat_level===1\">二级</el-tag>\n          <el-tag type=\"warning\" size=\"mini\" v-else>三级</el-tag>\n        </template>\n\n        <!-- 操作 -->\n        <template slot=\"opt\" slot-scope=\"scope\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-edit\"\n            size=\"mini\"\n            @click=\"showEditCateDialog(scope.row.cat_id)\"\n          >编辑</el-button>\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeCate(scope.row.cat_id)\">删除</el-button>\n        </template>\n      </tree-table>\n\n      <!-- 分页区域 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"querInfo.pagenum\"\n        :page-sizes=\"[3, 5, 10, 15]\"\n        :page-size=\"querInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </el-card>\n\n    <!-- 添加分类的对话框 -->\n    <el-dialog\n      title=\"添加分类\"\n      :visible.sync=\"addCateDialogVisible\"\n      width=\"50%\"\n      @close=\"addCateDialogClosed\"\n    >\n      <!-- 添加分类的表单 -->\n      <el-form\n        :model=\"addCateForm\"\n        :rules=\"addCateFormRules\"\n        ref=\"addCateFormRef\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"父级分类：\">\n          <!-- options 用来指定数据源 -->\n          <!-- props 用来指定配置对象 -->\n          <el-cascader\n            expand-trigger=\"hover\"\n            :options=\"parentCateList\"\n            :props=\"cascaderProps\"\n            v-model=\"selectedKeys\"\n            @change=\"parentCateChanged\"\n            clearable\n            change-on-select\n          ></el-cascader>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 编辑对话框 -->\n    <!-- 添加分类的对话框 -->\n    <el-dialog\n      title=\"修改分类\"\n      :visible.sync=\"editCateDialogVisible\"\n      width=\"50%\"\n      @close=\"editCateDialogClosed\"\n    >\n      <!-- 添加分类的表单 -->\n      <el-form\n        :model=\"editCateForm\"\n        :rules=\"editCateFormRules\"\n        ref=\"editCateFormRef\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\n          <el-input v-model=\"editCateForm.cat_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editCateDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editCate\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\nexport default {\n  data: () => ({\n    // 查询条件\n    querInfo: {\n      type: 3,\n      pagenum: 1,\n      pagesize: 5\n    },\n    // 商品分类的数据列表，默认为空\n    catelist: [],\n    // 总数据条数\n    total: 0,\n\n    // 为table指定列的定义\n    columns: [\n      {\n        label: '分类名称',\n        prop: 'cat_name'\n      },\n      {\n        label: '是否有效',\n        // 表示，将当前列定义为模板列\n        type: 'template',\n        // 表示当前这一列使用模板名称\n        template: 'isok'\n      },\n      {\n        label: '排序',\n        // 表示，将当前列定义为模板列\n        type: 'template',\n        // 表示当前这一列使用模板名称\n        template: 'order'\n      },\n      {\n        label: '操作',\n        // 表示，将当前列定义为模板列\n        type: 'template',\n        // 表示当前这一列使用模板名称\n        template: 'opt'\n      }\n    ],\n    // 控制添加分类对话框的显示与隐藏\n    addCateDialogVisible: false,\n    // 添加分类的表单数据对象\n    addCateForm: {\n      // 将要添加的分类的名称\n      cat_name: '',\n      // 父级分类的Id\n      cat_pid: 0,\n      // 分类的等级，默认要添加的是1级分类\n      cat_level: 0\n    },\n\n    addCateFormRules: {\n      cat_name: [{ required: true, message: '请输入分类名称', trigger: 'blur' }]\n    },\n    // 父级分类的列表\n    parentCateList: [],\n    // 指定级联选择器的配置对象\n    cascaderProps: {\n      value: 'cat_id',\n      label: 'cat_name',\n      children: 'children'\n    },\n    // 选中的父级分类的Id数组\n    selectedKeys: [],\n    // 编辑对话框的显示与隐藏\n    editCateDialogVisible: false,\n    // 修改表单数据对象\n    editCateForm: {},\n    // 修改标表单的验证规则\n    editCateFormRules: {\n      cat_name: [{ required: true, message: '请输入分类名称', trigger: 'blur' }]\n    }\n  }),\n  created() {\n    this.getCateList()\n  },\n  methods: {\n    // 获取商品分类数据\n    async getCateList() {\n      const {\n        data: { data, meta }\n      } = await this.$http.get('categories', {\n        params: this.querInfo\n      })\n\n      if (meta.status !== 200) {\n        return this.$message.error('获取商品分类失败！')\n      }\n\n      console.log(data)\n      // 把数据列表，赋值给 catelist\n      this.catelist = data.result\n      // 为总数据条数赋值\n      this.total = data.total\n    },\n    // 监听 pagesize 改变\n    handleSizeChange(newSize) {\n      this.querInfo.pagesize = newSize\n      this.getCateList()\n    },\n    // 监听 pagenum 改变\n    handleCurrentChange(newPage) {\n      this.querInfo.pagenum = newPage\n      this.getCateList()\n    },\n    // 点击按钮，展示添加分类的对话框\n    showAddCateDialog() {\n      // 先获取父级分类的数据列表\n      this.getParentCateList()\n      // 再展示出对话框\n      this.addCateDialogVisible = true\n    },\n    // 获取父级分类的数据列表\n    async getParentCateList() {\n      const { data: res } = await this.$http.get('categories', {\n        params: { type: 2 }\n      })\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取父级分类数据失败！')\n      }\n      console.log(res.data)\n      this.parentCateList = res.data\n    },\n    // 选择项发生变化触发这个函数\n    parentCateChanged() {\n      console.log(this.selectedKeys)\n      // 如果 selectedKeys 数组中的 length 大于0，证明选中的父级分类\n      // 反之，就说明没有选中任何父级分类\n      if (this.selectedKeys.length > 0) {\n        // 父级分类的Id\n        this.addCateForm.cat_pid = this.selectedKeys[\n          this.selectedKeys.length - 1\n        ]\n        // 为当前分类的等级赋值\n        this.addCateForm.cat_level = this.selectedKeys.length\n        return\n      } else {\n        // 父级分类的Id\n        this.addCateForm.cat_pid = 0\n        // 为当前分类的等级赋值\n        this.addCateForm.cat_level = 0\n      }\n    },\n    // 点击按钮，添加新的分类\n    addCate() {\n      this.$refs.addCateFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.post(\n          'categories',\n          this.addCateForm\n        )\n\n        if (res.meta.status !== 201) {\n          return this.$message.error('添加分类失败！')\n        }\n\n        this.$message.success('添加分类成功！')\n        this.getCateList()\n        this.addCateDialogVisible = false\n      })\n    },\n    // 监听对话框的关闭事件，重置表单数据\n    addCateDialogClosed() {\n      this.$refs.addCateFormRef.resetFields()\n      this.selectedKeys = []\n      this.addCateForm.cat_level = 0\n      this.addCateForm.cat_pid = 0\n    },\n    //点击编辑按钮修改对话框内容\n    async showEditCateDialog(id) {\n      // 编辑当前参数的id\n      this.id=id\n      const { data: res } = await this.$http.get(`categories/${id}`)\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取参数信息失败！')\n      }\n      this.editCateForm = res.data\n      this.editCateDialogVisible = true\n    },\n    // 重置修改的表单\n    editCateDialogClosed() {\n      this.$refs.editCateFormRef.resetFields()\n    },\n  editCate() {\n      this.$refs.editCateFormRef.validate(async valid => {\n        if (!valid) return\n        // console.log(this)\n        // debugger\n        // 发起修改用户信息的数据请求\n        const { data: res } =await this.$http.put('categories/'+this.editCateForm.cat_id,this.editCateForm)        \n        // debugger\n        if (res.meta.status !== 200) return this.$message.error('更新分类失败！')\n        this.editCateForm={\n          cat_name:''\n        }\n        // 提示修改成功\n        this.$message.success('更新分类成功！')\n         // 刷新数据列表\n        this.getCateList()\n        // 关闭对话框\n        this.editCateDialogVisible = false\n      })\n    },\n      // 根据id 删除对应的产品分类\n    async  removeCate(id){\n         try {\n        // 如果用户确认删除，则返回值为字符串 confirm\n        // 如果用户取消了删除，则返回值为字符串 cancel\n        // console.log(confirmResult)\n        await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        const { data: res } = await this.$http.delete('categories/' + id)\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除用户失败！')\n        }\n         // 刷新数据列表\n        this.getCateList()\n        \n        this.$message.success('删除用户成功！')\n       \n      } catch (err) {\n        this.$message.info('已经撤销删除')\n      }\n      }\n  }\n}\n</script lang=\"less\"scoped>\n<style >\n.treeTable {\n  margin-top: 15px;\n}\n\n.el-cascader {\n  width: 100%;\n}\n</style>"]}]}