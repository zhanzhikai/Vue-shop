{"remainingRequest":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/goods/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/goods/List.vue","mtime":1563952626165},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/babel-loader/lib/index.js","mtime":1564022599683},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js","mtime":1564022615698}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: () => ({\n    // 查询参数对象\n    queryInfo: {\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    },\n    // 商品列表\n    goodslist: [],\n    // 总数据条数\n    total: 0\n  }),\n  created() {\n    this.getGoodsList()\n  },\n  methods: {\n    // 根据分页获取对应的商品列表\n    async getGoodsList() {\n      const { data: res } = await this.$http.get('goods', {\n        params: this.queryInfo\n      })\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品列表失败！')\n      }\n\n      this.$message.success('获取商品列表成功！')\n      console.log(res.data)\n      this.goodslist = res.data.goods\n      this.total = res.data.total\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getGoodsList()\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getGoodsList()\n    },\n    async removeById(id) {\n      try {\n        await this.$confirm('此操作将永久删除该商品, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        const { data: res } = await this.$http.delete(`goods/${id}`)\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除失败！')\n        }\n\n        this.$message.success('删除成功！')\n        this.getGoodsList()\n      } catch (err) {\n        this.$message.error('撤销删除')\n      }\n    },\n    goAddpage() {\n      this.$router.push('/goods/add')\n    }\n  }\n}\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\n  <div class=\"list\">\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <!-- 绑定的函数是在input框上 -->\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @keyup.enter.native=\"getGoodsList\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getGoodsList\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"goAddpage\">添加商品</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- table表格区域 -->\n      <el-table :data=\"goodslist\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"商品名称\" prop=\"goods_name\"></el-table-column>\n        <el-table-column label=\"商品价格(元)\" prop=\"goods_price\" width=\"95px\" align=\"center\"></el-table-column>\n        <el-table-column label=\"商品重量\" prop=\"goods_weight\" width=\"70px\" align=\"center\"></el-table-column>\n        <el-table-column label=\"创建时间\" prop=\"add_time\" width=\"140px\" align=\"center\">\n          <template slot-scope=\"scope\">{{scope.row.add_time | dateFormat}}</template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"130px\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" align=\"center\"></el-button>\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n              @click=\"removeById(scope.row.goods_id)\"\n              align=\"center\"\n            ></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页区域 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[5, 10, 15, 20]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        background\n      ></el-pagination>\n    </el-card>\n  </div>\n</template>\n<script>\nexport default {\n  data: () => ({\n    // 查询参数对象\n    queryInfo: {\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    },\n    // 商品列表\n    goodslist: [],\n    // 总数据条数\n    total: 0\n  }),\n  created() {\n    this.getGoodsList()\n  },\n  methods: {\n    // 根据分页获取对应的商品列表\n    async getGoodsList() {\n      const { data: res } = await this.$http.get('goods', {\n        params: this.queryInfo\n      })\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品列表失败！')\n      }\n\n      this.$message.success('获取商品列表成功！')\n      console.log(res.data)\n      this.goodslist = res.data.goods\n      this.total = res.data.total\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getGoodsList()\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getGoodsList()\n    },\n    async removeById(id) {\n      try {\n        await this.$confirm('此操作将永久删除该商品, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        const { data: res } = await this.$http.delete(`goods/${id}`)\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除失败！')\n        }\n\n        this.$message.success('删除成功！')\n        this.getGoodsList()\n      } catch (err) {\n        this.$message.error('撤销删除')\n      }\n    },\n    goAddpage() {\n      this.$router.push('/goods/add')\n    }\n  }\n}\n</script lang=\"less\"scoped>\n<style >\n</style>"]}]}