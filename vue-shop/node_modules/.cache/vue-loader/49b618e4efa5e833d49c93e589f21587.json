{"remainingRequest":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/power/Roles/index.vue?vue&type=style&index=0&id=643d4df6&lang=less&scoped=true&","dependencies":[{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/src/components/power/Roles/index.vue","mtime":1563757275027},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/css-loader/index.js","mtime":1564022615061},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1564022615698},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/postcss-loader/src/index.js","mtime":1564022615590},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/less-loader/dist/cjs.js","mtime":1564022623602},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/cache-loader/dist/cjs.js","mtime":1564022614767},{"path":"/Users/macbookproxiaokai/Desktop/Desktop/vue-shop/node_modules/vue-loader/lib/index.js","mtime":1564022615698}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.el-tag {\n  margin: 7px;\n}\n\n.bdtop {\n  border-top: 1px solid #eee;\n}\n\n.bdbottom {\n  border-bottom: 1px solid #eee;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsWA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/power/Roles","sourcesContent":["<template>\n  <div class=\"roles\">\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 添加角色按钮区域 -->\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"addright=true\">添加角色</el-button>\n        </el-col>\n        \n      </el-row>\n      <!-- 角色列表区域 -->\n      <el-table :data=\"roles\" border stripe>\n        <!-- 展开列 -->\n        <el-table-column type=\"expand\">\n          <template slot-scope=\"scope\">\n            <el-row\n              :class=\"['bdbottom',{bdtop:index == 0}]\"\n              v-for=\"(item1,index) in scope.row.children\"\n              :key=\"item1.id\"\n            >\n              <!-- 渲染一级权限 -->\n              <el-col :span=\"5\">\n                <el-tag closable @close=\"removeRightById(scope.row, item1.id)\">{{item1.authName}}</el-tag>\n                <i class=\"el-icon-caret-right\"></i>\n              </el-col>\n              <!-- 渲染二级和三级权限 -->\n              <el-col :span=\"19\">\n                <!-- 通过 for 循环 嵌套渲染二级权限 -->\n                <el-row\n                  :class=\"[i2 === 0 ? '' : 'bdtop', 'vcenter']\"\n                  v-for=\"(item2, i2) in item1.children\"\n                  :key=\"item2.id\"\n                >\n                  <el-col :span=\"6\">\n                    <el-tag\n                      type=\"success\"\n                      closable\n                      @close=\"removeRightById(scope.row, item2.id)\"\n                    >{{item2.authName}}</el-tag>\n                    <i class=\"el-icon-caret-right\"></i>\n                  </el-col>\n                  <el-col :span=\"18\">\n                    <el-tag\n                      type=\"warning\"\n                      v-for=\"item3 in item2.children\"\n                      :key=\"item3.id\"\n                      closable\n                      @close=\"removeRightById(scope.row, item3.id)\"\n                    >{{item3.authName}}</el-tag>\n                  </el-col>\n                </el-row>\n              </el-col>\n            </el-row>\n\n            <!-- <pre>\n              {{scope.row}}\n            </pre>-->\n          </template>\n        </el-table-column>\n        <!-- 索引列 -->\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\n        <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"300px\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"editRight(scope.row.id)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\"   @click=\"removeUserById(scope.row.id)\">删除</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"warning\"\n              icon=\"el-icon-setting\"\n              @click=\"showSetRightDialog(scope.row)\"\n            >分配权限</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 分配权限的对话框 -->\n    <el-dialog\n      title=\"分配权限\"\n      :visible.sync=\"setRightDialogVisible\"\n      width=\"50%\"\n      @close=\"setRightDialogClosed\"\n    >\n      <!-- 树形控件 -->\n      <el-tree\n        :data=\"rightslist\"\n        :props=\"treeProps\"\n        show-checkbox\n        node-key=\"id\"\n        default-expand-all\n        :default-checked-keys=\"defKeys\"\n        ref=\"treeRef\"\n      ></el-tree>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      title=\"分配权限\"\n      :visible.sync=\"addright\"\n      width=\"50%\"\n      \n    >\n      <!--添加 -->\n      <el-form  :model=\"userForm\"  :rules=\"addFromRules\"  ref=\"addFormRef\" label-width=\"80px\">\n  <el-form-item label=\"角色名称\" prop=\"roleName\">\n    <el-input v-model=\"userForm.roleName\"></el-input>\n  </el-form-item>\n  <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n    <el-input v-model=\"userForm.roleDesc\"></el-input>\n  </el-form-item>\n  </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addright = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      title=\"分配权限\"\n      :visible.sync=\"editright\"\n      width=\"50%\"\n      \n    >\n      <!-- 编辑 -->\n      <el-form   label-width=\"80px\">\n  <el-form-item label=\"活动名称\">\n    <el-input v-model=\"userForm.roleName\"></el-input>\n  </el-form-item>\n  <el-form-item label=\"活动名称\">\n    <el-input v-model=\"userForm.roleDesc\"></el-input>\n  </el-form-item>\n  </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editright = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\nexport default {\n  data: () => ({\n    id: '',\n    editright: false,\n     //添加用户的表单数据\n    userForm: {\n      roleName : '',\n      roleDesc : '',\n    }, \n    addright: false,\n    // 所有角色列表数据\n    roles: [],\n    // 控制分配权限对话框的显示与隐藏\n    setRightDialogVisible: false,\n    // 所有权限的数据\n    rightslist: [],\n        // 树形控件的属性绑定对象\n    treeProps: {\n        label: 'authName',\n        children: 'children'\n      },\n      // 默认选中的节点Id值数组\n      defKeys: [],\n      // 当前即将分配权限的角色id\n      roleId: '',\n     \n      addFromRules:{\n        roleName:[\n          {required:true,message:'请输入角色名称',trigger:'blur'},\n          {\n            min:3,\n            max:10,\n            message: '用户名的长度在3~10个字符之间',\n            trigger:'blur'\n          }\n        ],\n             roleDesc:[\n          {required:true,message:'请输入角色名称',trigger:'blur'},\n          {\n            min:3,\n            max:10,\n            message: '用户名的长度在3~10个字符之间',\n            trigger:'blur'\n          }\n        ],\n      }\n\n  }),\n  created() {\n    this.getRoles()\n  },\n  methods: {\n    async getRoles() {\n      const {\n        data: { data, meta }\n      } = await this.$http.get('roles')\n      if (meta.status !== 200) return this.$message.error(meta.msg)\n      this.roles = data\n      console.log(data)\n    },\n      \n    // 根据Id删除对应的权限\n    async removeRightById(role, rightId) {\n      // 弹框提示用户是否要删除\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该文件, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('取消了删除！')\n      }\n\n      const { data: res } = await this.$http.delete(\n        `roles/${role.id}/rights/${rightId}`\n      )\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('删除权限失败！')\n      }\n      role.children = res.data\n    },\n    //展示分配权限的对话框\n    async showSetRightDialog(role) {\n      this.roleId = role.id\n      //获取所以的权限的数据\n      const { data: res } = await this.$http.get('rights/tree')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取权限数据失败')\n      }\n      //把获取的权限数据保存到data 中\n      this.rightslist = res.data\n      console.log(this.rightslist)\n      // 递归获取三级节点的Id\n      this.getLeafKeys(role, this.defKeys)\n\n      this.setRightDialogVisible = true\n    },\n    // 通过递归的形式，获取角色下所有三级权限的id，并保存到 defKeys 数组中\n    getLeafKeys(node, arr) {\n      // 如果当前 node 节点不包含 children 属性，则是三级节点\n      if (!node.children) {\n        return arr.push(node.id)\n      }\n\n      node.children.forEach(item => this.getLeafKeys(item, arr))\n    },\n    // 监听分配权限对话框的关闭事件\n    setRightDialogClosed() {\n      this.defKeys = []\n    },\n    // 点击为角色分配权限\n    async allotRights() {\n      const keys = [\n        ...this.$refs.treeRef.getCheckedKeys(),\n        ...this.$refs.treeRef.getHalfCheckedKeys()\n      ]\n\n      const idStr = keys.join(',')\n\n      const { data: res } = await this.$http.post(\n        `roles/${this.roleId}/rights`,\n        { rids: idStr }\n      )\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('分配权限失败！')\n      }\n\n      this.$message.success('分配权限成功！')\n      this.getRoles()\n      this.setRightDialogVisible = false\n    },\n        // 点击按钮，添加新用户\n    async addUser() {\n      \n        // 可以发起添加用户的网络请求\n        const { data: res } = await this.$http.post('roles', this.userForm)\n\n        if (res.meta.status !== 201) {\n          this.$message.error('添加用户失败！')\n        }\n        console.log(res.data)\n\n        this.$message.success('添加用户成功！')\n        // 隐藏添加用户的对话框\n        this.addright = false\n        // 重新获取用户列表数据\n        this.getRoles()\n        this.userForm = {}\n    },\n        // 根据Id删除对应的用户信息\n    async removeUserById(id) {\n      try {\n        // 如果用户确认删除，则返回值为字符串 confirm\n        // 如果用户取消了删除，则返回值为字符串 cancel\n        // console.log(confirmResult)\n        await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        const { data: res } = await this.$http.delete('roles/' + id)\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除用户失败！')\n        }\n         // 刷新数据列表\n        this.getRoles()\n        \n        this.$message.success('删除用户成功！')\n       \n      } catch (err) {\n        this.$message.info('已经撤销删除')\n      }\n    },\n    async editRight(id) {\n      this.id = id\n      \n      console.log(id)\n      const { data:{ data, meta } } = await this.$http.get('roles/' + id)\n      if(meta.status !== 200) return this.$message.error('获取用户失败！')\n      this.$message.success('获取用户成功！')\n      this.userForm.roleName = data.roleName\n      this.userForm.roleDesc = data.roleDesc\n      this.editright = true\n    },\n    async editUser() {\n      const { data:{ data, meta } } = await this.$http.put('roles/' + this.id,this.userForm)\n      if(meta.status !== 200) return this.$message.error('获取用户失败！')\n      this.$message.success('获取用户成功！')\n      this.userForm = {\n        roleName: '',\n        roleDesc: ''\n      }\n      this.editright = false\n      this.getRoles()\n    }\n  }\n}\n</script lang=\"less\"scoped>\n<style lang=\"less\" scoped>\n.el-tag {\n  margin: 7px;\n}\n\n.bdtop {\n  border-top: 1px solid #eee;\n}\n\n.bdbottom {\n  border-bottom: 1px solid #eee;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n}\n</style>"]}]}